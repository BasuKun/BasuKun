[
  {
    "Id": 458,
    "Title": "Commenting source code"
  },
  {
    "Id": 459,
    "Title": "Shift operators"
  },
  {
    "Id": 469,
    "Title": "Long branches not supported"
  },
  {
    "Id": 471,
    "Title": "Logical Xor"
  },
  {
    "Id": 472,
    "Title": "Serialization"
  },
  {
    "Id": 945,
    "Title": "Support for null value"
  },
  {
    "Id": 990,
    "Title": "Internal use of int rather than double"
  },
  {
    "Id": 1205,
    "Title": "Namespace Casing"
  },
  {
    "Id": 1482,
    "Title": "leading decimal point for floating point values"
  },
  {
    "Id": 1771,
    "Title": "Owner member resolves to enum constant with same name"
  },
  {
    "Id": 1783,
    "Title": "Provide means to restrict eligibility of owner members"
  },
  {
    "Id": 2012,
    "Title": "Evaluation on different cultures"
  },
  {
    "Id": 2160,
    "Title": "Strongly signed assemblies"
  },
  {
    "Id": 2435,
    "Title": "How obtaining the 'resolved' expression"
  },
  {
    "Id": 2515,
    "Title": "FleeCalc Implementation"
  },
  {
    "Id": 2543,
    "Title": "Choosing \"Blinds\" or \"BullsEye\" in the Demos throws this Exceptions"
  },
  {
    "Id": 3107,
    "Title": "Owner base type property calling produce runtime error"
  },
  {
    "Id": 3552,
    "Title": "Comparing two enums of the same type should be allowed"
  },
  {
    "Id": 3574,
    "Title": "Mark all custom exceptions as [serializable]"
  },
  {
    "Id": 3823,
    "Title": "Implement standard constructors on all custom exceptions"
  },
  {
    "Id": 4157,
    "Title": "Culture/Function w/ multiple parameters issue"
  },
  {
    "Id": 5480,
    "Title": "Create Dynamic"
  },
  {
    "Id": 5764,
    "Title": "Strings to resources"
  },
  {
    "Id": 6322,
    "Title": "Ability to use 1-based vs 0-based indexes for arrays"
  },
  {
    "Id": 6785,
    "Title": "Function calls with more than two arguments give parse error"
  },
  {
    "Id": 7013,
    "Title": "Indexer with more than one argument gives parser exception"
  },
  {
    "Id": 7040,
    "Title": "The Ciloci.Flee.chm Compiled help file displays \"Navigation to the webpage was canceled\""
  },
  {
    "Id": 7048,
    "Title": "Implicit castor is not used in FLEE expression"
  },
  {
    "Id": 7394,
    "Title": "Illegal one-byte branch error"
  },
  {
    "Id": 7414,
    "Title": "DateTime evaluation fails"
  },
  {
    "Id": 7418,
    "Title": "Illegal one-byte branch error in version 0.9.23.0"
  },
  {
    "Id": 7430,
    "Title": "Implicit multiplication"
  },
  {
    "Id": 7913,
    "Title": "Configurable string separator"
  },
  {
    "Id": 8001,
    "Title": "Allow to supply an IFormatProvider when compiling an expression"
  },
  {
    "Id": 8121,
    "Title": "Silverlight compatibility"
  },
  {
    "Id": 9807,
    "Title": "ArgumentOutOfRangeException in Ciloci.Flee.BranchManager.IsLongBranch()"
  },
  {
    "Id": 10633,
    "Title": "c# context.CompileGeneric<bool> call except when variable name has $ in it."
  },
  {
    "Id": 10784,
    "Title": "Needs support for Extension Methods"
  },
  {
    "Id": 11937,
    "Title": "Nested nullable property types fail in expression comparison operators"
  },
  {
    "Id": 12064,
    "Title": "Using as C# scripting engine from Silverlight application"
  },
  {
    "Id": 12065,
    "Title": "Convert source code to C# Silverlight application"
  },
  {
    "Id": 12628,
    "Title": "Overloaded operatorson base class do not work"
  },
  {
    "Id": 13433,
    "Title": "Compilation \"PI * R * R = AREA\" expression raise Exception"
  },
  {
    "Id": 14002,
    "Title": "Changes I made to show more information in exceptions"
  },
  {
    "Id": 14272,
    "Title": "Create NuGet package"
  },
  {
    "Id": 14436,
    "Title": "Bug in LiteralElement.EmitLoad method"
  },
  {
    "Id": 14660,
    "Title": "int64 value parsing seems to fail for simple expressions with overflow error"
  },
  {
    "Id": 14732,
    "Title": "Unit test suit fails"
  },
  {
    "Id": 14981,
    "Title": "Index was out of range. Must be non-negative and less than the size of the collection.Parameter name: index"
  },
  {
    "Id": 15877,
    "Title": "No result for power higher than \"30\"!"
  },
  {
    "Id": 16268,
    "Title": "Use of \"+\" sign causes expression error"
  },
  {
    "Id": 16803,
    "Title": "SyntaxError: Unexpected character: I Line: 1, Column: 1"
  },
  {
    "Id": 16868,
    "Title": "ILGenerator reflection issue under Mono"
  },
  {
    "Id": 16929,
    "Title": "UndefinedFunction and UndefinedFunctionOnType have bad error message"
  },
  {
    "Id": 17329,
    "Title": "Allow adding instance methods"
  },
  {
    "Id": 17496,
    "Title": "Support of Between function in flee"
  },
  {
    "Id": 17600,
    "Title": "OutOfMemoryException in ExpressionContext()"
  },
  {
    "Id": 17638,
    "Title": "EmitLiteral in Identifier.vb"
  },
  {
    "Id": 17684,
    "Title": "Logical operation gives expressionCompile Exception"
  },
  {
    "Id": 17730,
    "Title": "Turkish localization causes syntax errors"
  },
  {
    "Id": 17731,
    "Title": "Certain long if statements crash the compiler"
  },
  {
    "Id": 17732,
    "Title": "It is possible to execute code not exposed in Flee via reflection"
  },
  {
    "Id": 17770,
    "Title": "Considering migrating to GitHub ?"
  }
]