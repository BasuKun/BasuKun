[
  {
    "Id": "844296",
    "ThreadId": "358218",
    "Html": "\r\n<p>This is very useful project , thanks.I don't know how to implement a switch,case structure with it. eg:\r\n<br>\r\nswitch(number)<br>\r\n{<br>\r\ncase 0:<br>\r\nnumber*3;<br>\r\ncase 1:<br>\r\nreturn 5<br>\r\ncase 2:<br>\r\nreturn number*2<br>\r\n<br>\r\n}<br>\r\n<br>\r\nCan we do it with flee if statements? Please help me.</p>\r\n",
    "PostedDate": "2012-06-04T03:31:06.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "857477",
    "ThreadId": "358218",
    "Html": "<p>I created a class/type to fake switches via method chaining:</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">using</span> System;\r\n\r\n<span style=\"color: blue;\">namespace</span> FleeExtensions\r\n{\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> Switch\r\n    {\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">object</span> Source;\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">object</span> Result;\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">bool</span> Completed;\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Switch @<span style=\"color: blue;\">switch</span>(<span style=\"color: blue;\">object</span> source)\r\n        {\r\n            Switch newSwitch = <span style=\"color: blue;\">new</span> Switch();\r\n            newSwitch.Source = source;\r\n            <span style=\"color: blue;\">return</span> newSwitch;\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> Switch @<span style=\"color: blue;\">case</span>(<span style=\"color: blue;\">object</span> value, <span style=\"color: blue;\">object</span> result)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (CheckEqual(value))\r\n            {\r\n                Result = result;\r\n                Completed = <span style=\"color: blue;\">true</span>;\r\n            }\r\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">this</span>;\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">object</span> @<span style=\"color: blue;\">default</span>(<span style=\"color: blue;\">object</span> defaultResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!Completed)\r\n                <span style=\"color: blue;\">return</span> defaultResult;\r\n            <span style=\"color: blue;\">return</span> Result;\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">bool</span> @<span style=\"color: blue;\">default</span>(<span style=\"color: blue;\">bool</span> defaultResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!Completed)\r\n                <span style=\"color: blue;\">return</span> defaultResult;\r\n            <span style=\"color: blue;\">return</span> Convert.ToBoolean(Result);\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> @<span style=\"color: blue;\">default</span>(<span style=\"color: blue;\">string</span> defaultResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!Completed)\r\n                <span style=\"color: blue;\">return</span> defaultResult;\r\n            <span style=\"color: blue;\">return</span> Convert.ToString(Result);\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">int</span> @<span style=\"color: blue;\">default</span>(<span style=\"color: blue;\">int</span> defaultResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!Completed)\r\n                <span style=\"color: blue;\">return</span> defaultResult;\r\n            <span style=\"color: blue;\">return</span> Convert.ToInt32(Result);\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">double</span> @<span style=\"color: blue;\">default</span>(<span style=\"color: blue;\">double</span> defaultResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!Completed)\r\n                <span style=\"color: blue;\">return</span> defaultResult;\r\n            <span style=\"color: blue;\">return</span> Convert.ToDouble(Result);\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">bool</span> CheckEqual(<span style=\"color: blue;\">object</span> value)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (Completed)\r\n                <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;\r\n            <span style=\"color: blue;\">if</span> (Source != <span style=\"color: blue;\">null</span>)\r\n                <span style=\"color: blue;\">return</span> Source.Equals(value);\r\n            <span style=\"color: blue;\">return</span> value == <span style=\"color: blue;\">null</span>;\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Then I make sure to add that as an imported type:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>myExpressionContext.Imports.AddType(<span style=\"color: blue;\">typeof</span>(Switch));\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Then in the scripted text, it's used like:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">switch</span>(number).\r\n\t<span style=\"color: blue;\">case</span>(0, number * 3).\r\n\t<span style=\"color: blue;\">case</span>(1, 5).\r\n\t<span style=\"color: blue;\">case</span>(2, number * 2).\r\n\t<span style=\"color: blue;\">default</span>(YOUR_DEFAULT_RETURN_VALUE)\r\n</pre>\r\n</div>\r\nIt worked for Silverlight just fine (haven't tested outside of that).&nbsp; Note that this implementation also requires that you provide a \"default\" value case.&nbsp; You may need to add additional type overloads as needed.</p>",
    "PostedDate": "2012-07-04T10:09:17.997-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]