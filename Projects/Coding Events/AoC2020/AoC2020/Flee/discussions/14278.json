[
  {
    "Id": "46421",
    "ThreadId": "14278",
    "Html": "\r\nHi, i would like to explain how im going to try using Flee, so you can tell me if such thing is not possible...<br /><br />I have bussines objects, for example purpouses lets use Client, and Client as some properties like Name, BirthDate, Invoices (to put some set of values) and CreditLimit<br /><br />Now i create a custom attribute, lets call it BizExpression with a propertie Name and other propertie FleeExpression<br /><br />Lets code it. (more or less, just the important things)<br /><br /><a href=\"http://www.codeplex.com/Flee/Wiki/View.aspx?title=BizExpression%28Name%20%3d%20%22Client%22%29\">BizExpression(Name = \"Client\")</a><br />public class Client<br />{<br /><br /><a href=\"http://www.codeplex.com/Flee/Wiki/View.aspx?title=BizExpression%28Name%20%3d%20%22Name%22%2c%20FleeExpression%20%3d%20%22Client.Name%22%29\">BizExpression(Name = \"Name\", FleeExpression = \"Client.Name\")</a><br />   public String Name;<br /><br /><a href=\"http://www.codeplex.com/Flee/Wiki/View.aspx?title=BizExpression%28Name%20%3d%20%22Credit%20Limit%22%2c%20FleeExpression%20%3d%20%22Client.CreditLimit%22%29\">BizExpression(Name = \"Credit Limit\", FleeExpression = \"Client.CreditLimit\")</a><br />   public float CreditLimit;<br /><br />  ...<br />}<br /><br />Ready with this, now lets go to other application, lets say an Expression Builder<br /><br />Supouse i load the Assembly of bussines object and loop thru types with the BizExpression attribute using BizExpression's Name i build a tree node to add a treeview, so i load a tree of my bussines objects, each node has also his FleeExpression.<br /><br />Now in a entry near the tree i build some expression:<br /><br />If(Client.CreditLimit &gt; 999, \"Call for Promotion\", \"Low limit\")<br /><br />Client.CreditLimit was obtained by a double click on the node \"Credit Limit\" children of node \"Client\" or by drag and drop.<br /><br />Ok, i store the expression in a database with a name like \"Credit Situation\" for later use.<br /><br />Now in \"later use\" :) im doing some report and in some place for the client im procesing i would like to evaluate his \"Client Situation\"...<br /><br />I should do:<br /><br />ExpressionOptions options = new ExpressionOptions();<br />options.Imports.AddType(typeof(MyBizNamespace.Client));   // can i add the whole namespace ?<br /><br />//more real solution is loop thru the classes of the assembly that have BizExpression attribute<br />//and add each one of this to imports...<br /><br />foreach (Client c in MyClients)<br />{<br />               Expression e = new Expression(\"If(Client.CreditLimit &gt; 999, \"Call for Promotion\", \"Low limit\")\", c, options);<br />               ExpressionEvaluator&lt;String&gt; evaluator = (ExpressionEvaluator&lt;String&gt;)e.Evaluator;<br />               String ClientSituation = evaluator();<br />}<br /><br />Ok, this is from a bird view the idea, the key here is that the Expression builder application is used by end users not for me, and the reports are end users made also.<br /><br />What you people think about this ?<br /><br /><br />",
    "PostedDate": "2007-08-24T06:00:15.77-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "46514",
    "ThreadId": "14278",
    "Html": "\r\nIf I understand correctly, you have some business objects and you'd like to evaluate expressions which make use of properties on those objects.  Correct?<br /><br />In that case, you could do the following:<br /><pre style=\"background-color:#ECECEC; border:dashed .1em #3E62A6; font-family:Consolas, Courier New, Courier, Monospace; font-size:1em; margin-top:0; padding:.5em; height:auto; overflow:auto; overflow-x:auto; overflow-y:auto;\">\r\nDynamicExpressionOwner owner = new DynamicExpressionOwner();\r\n// Define a variable named \"Client\" of type Client\r\nowner.DefineVariable(\"Client\", typeof(Client));\r\n \r\nforeach(Client c in MyClients)\r\n{\r\n  // Set the variable value to the current client instance\r\n  owner.SetVariableValue(\"Client\", c);\r\n  // We can now access all properties of the instance in the expression\r\n  Expression e = new Expression(\"Client.CreditLimit + 1\", owner); \r\n // Evaluate as usual\r\n}\r\n</pre><br />What this does is define a variable as \"Client\" of the type Client.  Once defined, you can use the name \"Client\" in an expression and the \".\" operator to access any public properties.<br />",
    "PostedDate": "2007-08-24T13:55:55.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "46553",
    "ThreadId": "14278",
    "Html": "\r\nThanks Eugene, its really more complex im just starting.<br /><br />In simple terms users make word documents with bookmarks, from client name to debt and taxes special calculations etc, i read the word from .NET and get all bookmars. Show to the user the tree of bussiness objects and the bookmarks for the user tell wich object goes to wich bookmark.<br /><br />There are things (calculations) that are not a part of my bussines object directly, here is where flee comes, so the user can define his own business expresions (using bussiness objects) and then assign this expression to bookmarks, this is essential.<br /><br />This need to be reusable because similar situation happens with other component than word generation.<br /><br />",
    "PostedDate": "2007-08-25T04:37:51.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]