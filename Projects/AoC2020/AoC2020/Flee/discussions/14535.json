[
  {
    "Id": "47268",
    "ThreadId": "14535",
    "Html": "\r\nHi again, i have some logicx with the CalculationEngine in this way:   <br /><br /><br />            ICalculationEngineExpressionOwner expressionOwner = ContextoResolucion();<br /><br />            ExpressionOptions expressionOptions = OpcionesResolucion();<br /><br />            foreach (Concepto concepto in conceptos)<br />            {<br /><br />                motorCalculoExpresiones.Add(concepto.Expresion, expressionOwner, expressionOptions, concepto.Nombre);<br /><br />                motorCalculoExpresiones.Recalculate(concepto.Nombre);<br /><br /><b>String resultado = motorCalculoExpresiones.GetResult&lt;String&gt;(concepto.Nombre);</b><br /><br />                conceptosResueltos.Add(concepto, resultado);<br /><br />            }<br /><br />My problem is 'resultado' is hard typed to String and i need Object, if i use Object i get:<br />The result type of 'CarpetaFicha' ('String') does not match the supplied type argument ('Object')<br /><br />The expressions are end-user made using things like dates numbers and string i cannot know the type of the result in advance.<br /><br />Some idea ?<br /><br />",
    "PostedDate": "2007-08-30T12:43:06.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47281",
    "ThreadId": "14535",
    "Html": "\r\nI will put in a GetResult method that returns the result as an object.<br />",
    "PostedDate": "2007-08-30T13:17:50.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47313",
    "ThreadId": "14535",
    "Html": "\r\nwhat is the best practices to handle DataSet/DataTable/DataRow (typed or untyped) with Flee?<br /><br />some idea?<br />",
    "PostedDate": "2007-08-30T17:12:48.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47323",
    "ThreadId": "14535",
    "Html": "\r\nA GetResult that returns an object has been implemented in release 9.0.5.5.<br />",
    "PostedDate": "2007-08-30T19:08:43.637-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47372",
    "ThreadId": "14535",
    "Html": "\r\nThanks !<br /><br />How affect ExpressionOptions.ResultType to this ?<br />",
    "PostedDate": "2007-08-31T06:14:18.623-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47392",
    "ThreadId": "14535",
    "Html": "<br /><div class=\"quote\" style=\"border: dotted .1em #aaa; border-left: none; border-right: none; font-style: italic; margin: 1em 0em 2.5em 3em;padding: .2em;\"><br />eferreyra wrote:<br />Thanks !<br /><br />How affect ExpressionOptions.ResultType to this ?<br /><br /></div><br />The ResultType determines the type of the expression's result.  This is the type that other expressions will see when they reference the original expression in the calculation engine and the actual type that will be returned as an object in the new GetResult method.<br />",
    "PostedDate": "2007-08-31T08:37:46.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "47393",
    "ThreadId": "14535",
    "Html": "<br /><div class=\"quote\" style=\"border: dotted .1em #aaa; border-left: none; border-right: none; font-style: italic; margin: 1em 0em 2.5em 3em;padding: .2em;\"><br />jmptrader wrote:<br />what is the best practices to handle DataSet/DataTable/DataRow (typed or untyped) with Flee?<br /><br />some idea?<br /><br /></div><br />Really, it's the same as with other types.  You declare a variable or field on the owner and then you reference it in the expression.  Flee's array indexer can also work with default property indexers so you can say <span class=\"codeInline\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\">mytable.Rows[0][\"columnA\"]</span>.  The only difference is that for typed datasets, you can just reference the property directly whereas for untyped datasets you have to do some casting.<br />",
    "PostedDate": "2007-08-31T08:42:32.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]